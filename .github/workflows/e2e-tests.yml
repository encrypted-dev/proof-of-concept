name: Integration tests

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # run 2 copies of the current job in parallel
        containers: [1, 2]
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Install build-essential and python
        run: sudo apt-get install -y build-essential python
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Git Checkout
        uses: actions/checkout@v2
      - name: Get NPM Cache Dir
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Enable NPM Cache on package-lock file
        uses: actions/cache@v1
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install NPM dependencies and build Userbase
        run: |
          npm run ci:install
          npm run build:userbase-js:script
      - name: Run Cypress Tests
        uses: cypress-io/github-action@v1
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        with:
          start: npm run ci:start
          wait-on: "http://localhost:8080/ping"
          wait-on-timeout: 120
          record: true
          parallel: true
          env: configFile=ci
